// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Role {
  id               String    @id @default(uuid())
  name             String    @unique
  description      String
  inactivationDate DateTime?
  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @updatedAt
  users            User[]
}

model User {
  id               String    @id @default(uuid())
  name             String
  email            String    @unique
  password         String
  inactivationDate DateTime?
  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @updatedAt
  role             Role      @relation(fields: [roleId], references: [id])
  roleId           String
  messages         Message[]
  sessions         Session[]
}

enum SessionStatus {
  ACTIVE
  ENDED
}

model Session {
  id        String        @id @default(uuid())
  status    SessionStatus
  endedAt   DateTime?
  createdAt DateTime      @default(now())
  updatedAt DateTime      @updatedAt
  createdBy User          @relation(fields: [userId], references: [id])
  userId    String
  messages  Message[]
}

model Message {
  id        String   @id @default(uuid())
  message   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  session   Session  @relation(fields: [sessionId], references: [id])
  sessionId String
  user      User     @relation(fields: [userId], references: [id])
  userId    String
}
